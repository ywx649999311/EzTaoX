name: tests

on:
  push:
    branches:
      - master
    tags:
      - "*"
  pull_request:

jobs:
  tests:
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.10', '3.11', '3.12', '3.13']
        os: [ubuntu-latest, macos-latest]
        x64: ["1"]
    runs-on: ${{ matrix.os }}
    if: ${{ !contains(toJSON(github.event.commits.*.message), '[skip-tests]') }}
    steps:
      #----------------------------------------------
      #       check-out repo and set-up python
      #----------------------------------------------
      # Step 1: Check out the repository
      - uses: actions/checkout@v4

      # Step 2: Set up Python
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      #----------------------------------------------
      #  -----  install & configure poetry  -----
      #----------------------------------------------
      # Step 3: Install and configure Poetry
      - name: Install and configure Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true
      #----------------------------------------------
      # -----  recreate env unconditionally  -----
      #----------------------------------------------
      # Step 4: Recreate virtual environment unconditionally
      - name: Recreate Virtual Environment
        run: |
          rm -rf .venv
          poetry config virtualenvs.in-project true
          poetry install --without docs
      #----------------------------------------------
      #                 run tests
      #----------------------------------------------
      # Step 5: Run tests
      - name: Run tests
        run: |
          source .venv/bin/activate
          poetry run pytest --cov tests/
        env:
          JAX_ENABLE_X64: ${{ matrix.x64 }}
